// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.19.4
// source: account/events/account.proto

package events

import (
	common "github.com/fabl3ss/banking_system/api/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AccountEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccountId string `protobuf:"bytes,1,opt,name=accountId,proto3" json:"accountId,omitempty"`
	// Types that are assignable to Event:
	//
	//	*AccountEvent_AccountCreated
	//	*AccountEvent_AccountCreateFailed
	//	*AccountEvent_AccountApproved
	//	*AccountEvent_AccountApproveFailed
	//	*AccountEvent_AccountClosed
	//	*AccountEvent_AccountCloseFailed
	Event isAccountEvent_Event `protobuf_oneof:"event"`
}

func (x *AccountEvent) Reset() {
	*x = AccountEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_events_account_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountEvent) ProtoMessage() {}

func (x *AccountEvent) ProtoReflect() protoreflect.Message {
	mi := &file_account_events_account_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountEvent.ProtoReflect.Descriptor instead.
func (*AccountEvent) Descriptor() ([]byte, []int) {
	return file_account_events_account_proto_rawDescGZIP(), []int{0}
}

func (x *AccountEvent) GetAccountId() string {
	if x != nil {
		return x.AccountId
	}
	return ""
}

func (m *AccountEvent) GetEvent() isAccountEvent_Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (x *AccountEvent) GetAccountCreated() *AccountCreated {
	if x, ok := x.GetEvent().(*AccountEvent_AccountCreated); ok {
		return x.AccountCreated
	}
	return nil
}

func (x *AccountEvent) GetAccountCreateFailed() *AccountCreateFailed {
	if x, ok := x.GetEvent().(*AccountEvent_AccountCreateFailed); ok {
		return x.AccountCreateFailed
	}
	return nil
}

func (x *AccountEvent) GetAccountApproved() *AccountApproved {
	if x, ok := x.GetEvent().(*AccountEvent_AccountApproved); ok {
		return x.AccountApproved
	}
	return nil
}

func (x *AccountEvent) GetAccountApproveFailed() *AccountApproveFailed {
	if x, ok := x.GetEvent().(*AccountEvent_AccountApproveFailed); ok {
		return x.AccountApproveFailed
	}
	return nil
}

func (x *AccountEvent) GetAccountClosed() *AccountClosed {
	if x, ok := x.GetEvent().(*AccountEvent_AccountClosed); ok {
		return x.AccountClosed
	}
	return nil
}

func (x *AccountEvent) GetAccountCloseFailed() *AccountCloseFailed {
	if x, ok := x.GetEvent().(*AccountEvent_AccountCloseFailed); ok {
		return x.AccountCloseFailed
	}
	return nil
}

type isAccountEvent_Event interface {
	isAccountEvent_Event()
}

type AccountEvent_AccountCreated struct {
	AccountCreated *AccountCreated `protobuf:"bytes,2,opt,name=accountCreated,proto3,oneof"`
}

type AccountEvent_AccountCreateFailed struct {
	AccountCreateFailed *AccountCreateFailed `protobuf:"bytes,3,opt,name=accountCreateFailed,proto3,oneof"`
}

type AccountEvent_AccountApproved struct {
	AccountApproved *AccountApproved `protobuf:"bytes,4,opt,name=accountApproved,proto3,oneof"`
}

type AccountEvent_AccountApproveFailed struct {
	AccountApproveFailed *AccountApproveFailed `protobuf:"bytes,5,opt,name=accountApproveFailed,proto3,oneof"`
}

type AccountEvent_AccountClosed struct {
	AccountClosed *AccountClosed `protobuf:"bytes,6,opt,name=accountClosed,proto3,oneof"`
}

type AccountEvent_AccountCloseFailed struct {
	AccountCloseFailed *AccountCloseFailed `protobuf:"bytes,7,opt,name=accountCloseFailed,proto3,oneof"`
}

func (*AccountEvent_AccountCreated) isAccountEvent_Event() {}

func (*AccountEvent_AccountCreateFailed) isAccountEvent_Event() {}

func (*AccountEvent_AccountApproved) isAccountEvent_Event() {}

func (*AccountEvent_AccountApproveFailed) isAccountEvent_Event() {}

func (*AccountEvent_AccountClosed) isAccountEvent_Event() {}

func (*AccountEvent_AccountCloseFailed) isAccountEvent_Event() {}

type AccountCreated struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HolderId   string                 `protobuf:"bytes,1,opt,name=holderId,proto3" json:"holderId,omitempty"`
	Balance    *common.Money          `protobuf:"bytes,2,opt,name=balance,proto3" json:"balance,omitempty"`
	OpenedAt   *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=openedAt,proto3" json:"openedAt,omitempty"`
	ExpiryDate *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=expiryDate,proto3" json:"expiryDate,omitempty"`
}

func (x *AccountCreated) Reset() {
	*x = AccountCreated{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_events_account_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountCreated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountCreated) ProtoMessage() {}

func (x *AccountCreated) ProtoReflect() protoreflect.Message {
	mi := &file_account_events_account_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountCreated.ProtoReflect.Descriptor instead.
func (*AccountCreated) Descriptor() ([]byte, []int) {
	return file_account_events_account_proto_rawDescGZIP(), []int{1}
}

func (x *AccountCreated) GetHolderId() string {
	if x != nil {
		return x.HolderId
	}
	return ""
}

func (x *AccountCreated) GetBalance() *common.Money {
	if x != nil {
		return x.Balance
	}
	return nil
}

func (x *AccountCreated) GetOpenedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.OpenedAt
	}
	return nil
}

func (x *AccountCreated) GetExpiryDate() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiryDate
	}
	return nil
}

type AccountCreateFailed struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Description string `protobuf:"bytes,1,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *AccountCreateFailed) Reset() {
	*x = AccountCreateFailed{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_events_account_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountCreateFailed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountCreateFailed) ProtoMessage() {}

func (x *AccountCreateFailed) ProtoReflect() protoreflect.Message {
	mi := &file_account_events_account_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountCreateFailed.ProtoReflect.Descriptor instead.
func (*AccountCreateFailed) Descriptor() ([]byte, []int) {
	return file_account_events_account_proto_rawDescGZIP(), []int{2}
}

func (x *AccountCreateFailed) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type AccountApproved struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ManagerId    string                 `protobuf:"bytes,1,opt,name=managerId,proto3" json:"managerId,omitempty"`
	ApprovalTime *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=approvalTime,proto3" json:"approvalTime,omitempty"`
}

func (x *AccountApproved) Reset() {
	*x = AccountApproved{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_events_account_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountApproved) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountApproved) ProtoMessage() {}

func (x *AccountApproved) ProtoReflect() protoreflect.Message {
	mi := &file_account_events_account_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountApproved.ProtoReflect.Descriptor instead.
func (*AccountApproved) Descriptor() ([]byte, []int) {
	return file_account_events_account_proto_rawDescGZIP(), []int{3}
}

func (x *AccountApproved) GetManagerId() string {
	if x != nil {
		return x.ManagerId
	}
	return ""
}

func (x *AccountApproved) GetApprovalTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ApprovalTime
	}
	return nil
}

type AccountApproveFailed struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Description string `protobuf:"bytes,1,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *AccountApproveFailed) Reset() {
	*x = AccountApproveFailed{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_events_account_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountApproveFailed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountApproveFailed) ProtoMessage() {}

func (x *AccountApproveFailed) ProtoReflect() protoreflect.Message {
	mi := &file_account_events_account_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountApproveFailed.ProtoReflect.Descriptor instead.
func (*AccountApproveFailed) Descriptor() ([]byte, []int) {
	return file_account_events_account_proto_rawDescGZIP(), []int{4}
}

func (x *AccountApproveFailed) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type AccountClosed struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClosedTime *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=closedTime,proto3" json:"closedTime,omitempty"`
}

func (x *AccountClosed) Reset() {
	*x = AccountClosed{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_events_account_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountClosed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountClosed) ProtoMessage() {}

func (x *AccountClosed) ProtoReflect() protoreflect.Message {
	mi := &file_account_events_account_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountClosed.ProtoReflect.Descriptor instead.
func (*AccountClosed) Descriptor() ([]byte, []int) {
	return file_account_events_account_proto_rawDescGZIP(), []int{5}
}

func (x *AccountClosed) GetClosedTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ClosedTime
	}
	return nil
}

type AccountCloseFailed struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Description string `protobuf:"bytes,1,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *AccountCloseFailed) Reset() {
	*x = AccountCloseFailed{}
	if protoimpl.UnsafeEnabled {
		mi := &file_account_events_account_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountCloseFailed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountCloseFailed) ProtoMessage() {}

func (x *AccountCloseFailed) ProtoReflect() protoreflect.Message {
	mi := &file_account_events_account_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountCloseFailed.ProtoReflect.Descriptor instead.
func (*AccountCloseFailed) Descriptor() ([]byte, []int) {
	return file_account_events_account_proto_rawDescGZIP(), []int{6}
}

func (x *AccountCloseFailed) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

var File_account_events_account_proto protoreflect.FileDescriptor

var file_account_events_account_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73,
	0x2f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12,
	0x61, 0x70, 0x69, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x73, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x12, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x6d, 0x6f, 0x6e, 0x65,
	0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb6, 0x04, 0x0a, 0x0c, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x4c, 0x0a, 0x0e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x73, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x48, 0x00, 0x52, 0x0e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x12, 0x5b, 0x0a, 0x13, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x27, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x48, 0x00, 0x52, 0x13, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x46, 0x61, 0x69, 0x6c, 0x65,
	0x64, 0x12, 0x4f, 0x0a, 0x0f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x72,
	0x6f, 0x76, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x48,
	0x00, 0x52, 0x0f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76,
	0x65, 0x64, 0x12, 0x5e, 0x0a, 0x14, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x70, 0x70,
	0x72, 0x6f, 0x76, 0x65, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x28, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x70, 0x70,
	0x72, 0x6f, 0x76, 0x65, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x48, 0x00, 0x52, 0x14, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x46, 0x61, 0x69, 0x6c,
	0x65, 0x64, 0x12, 0x49, 0x0a, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x6c, 0x6f,
	0x73, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x48, 0x00, 0x52, 0x0d,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x12, 0x58, 0x0a,
	0x12, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x46, 0x61, 0x69,
	0x6c, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x46, 0x61, 0x69, 0x6c, 0x65,
	0x64, 0x48, 0x00, 0x52, 0x12, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x6c, 0x6f, 0x73,
	0x65, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x42, 0x07, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x22, 0xcd, 0x01, 0x0a, 0x0e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x2b, 0x0a, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4d, 0x6f,
	0x6e, 0x65, 0x79, 0x52, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x36, 0x0a, 0x08,
	0x6f, 0x70, 0x65, 0x6e, 0x65, 0x64, 0x41, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x6f, 0x70, 0x65, 0x6e,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x3a, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x44, 0x61,
	0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x79, 0x44, 0x61, 0x74, 0x65,
	0x22, 0x37, 0x0a, 0x13, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x6f, 0x0a, 0x0f, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x64, 0x12, 0x1c, 0x0a, 0x09,
	0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x49, 0x64, 0x12, 0x3e, 0x0a, 0x0c, 0x61, 0x70,
	0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0c, 0x61, 0x70,
	0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x38, 0x0a, 0x14, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x46, 0x61, 0x69, 0x6c,
	0x65, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0x4b, 0x0a, 0x0d, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43,
	0x6c, 0x6f, 0x73, 0x65, 0x64, 0x12, 0x3a, 0x0a, 0x0a, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x54, 0x69, 0x6d,
	0x65, 0x22, 0x36, 0x0a, 0x12, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x6c, 0x6f, 0x73,
	0x65, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x10, 0x5a, 0x0e, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_account_events_account_proto_rawDescOnce sync.Once
	file_account_events_account_proto_rawDescData = file_account_events_account_proto_rawDesc
)

func file_account_events_account_proto_rawDescGZIP() []byte {
	file_account_events_account_proto_rawDescOnce.Do(func() {
		file_account_events_account_proto_rawDescData = protoimpl.X.CompressGZIP(file_account_events_account_proto_rawDescData)
	})
	return file_account_events_account_proto_rawDescData
}

var file_account_events_account_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_account_events_account_proto_goTypes = []interface{}{
	(*AccountEvent)(nil),          // 0: api.account.events.AccountEvent
	(*AccountCreated)(nil),        // 1: api.account.events.AccountCreated
	(*AccountCreateFailed)(nil),   // 2: api.account.events.AccountCreateFailed
	(*AccountApproved)(nil),       // 3: api.account.events.AccountApproved
	(*AccountApproveFailed)(nil),  // 4: api.account.events.AccountApproveFailed
	(*AccountClosed)(nil),         // 5: api.account.events.AccountClosed
	(*AccountCloseFailed)(nil),    // 6: api.account.events.AccountCloseFailed
	(*common.Money)(nil),          // 7: api.common.Money
	(*timestamppb.Timestamp)(nil), // 8: google.protobuf.Timestamp
}
var file_account_events_account_proto_depIdxs = []int32{
	1,  // 0: api.account.events.AccountEvent.accountCreated:type_name -> api.account.events.AccountCreated
	2,  // 1: api.account.events.AccountEvent.accountCreateFailed:type_name -> api.account.events.AccountCreateFailed
	3,  // 2: api.account.events.AccountEvent.accountApproved:type_name -> api.account.events.AccountApproved
	4,  // 3: api.account.events.AccountEvent.accountApproveFailed:type_name -> api.account.events.AccountApproveFailed
	5,  // 4: api.account.events.AccountEvent.accountClosed:type_name -> api.account.events.AccountClosed
	6,  // 5: api.account.events.AccountEvent.accountCloseFailed:type_name -> api.account.events.AccountCloseFailed
	7,  // 6: api.account.events.AccountCreated.balance:type_name -> api.common.Money
	8,  // 7: api.account.events.AccountCreated.openedAt:type_name -> google.protobuf.Timestamp
	8,  // 8: api.account.events.AccountCreated.expiryDate:type_name -> google.protobuf.Timestamp
	8,  // 9: api.account.events.AccountApproved.approvalTime:type_name -> google.protobuf.Timestamp
	8,  // 10: api.account.events.AccountClosed.closedTime:type_name -> google.protobuf.Timestamp
	11, // [11:11] is the sub-list for method output_type
	11, // [11:11] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_account_events_account_proto_init() }
func file_account_events_account_proto_init() {
	if File_account_events_account_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_account_events_account_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_events_account_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountCreated); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_events_account_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountCreateFailed); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_events_account_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountApproved); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_events_account_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountApproveFailed); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_events_account_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountClosed); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_account_events_account_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountCloseFailed); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_account_events_account_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*AccountEvent_AccountCreated)(nil),
		(*AccountEvent_AccountCreateFailed)(nil),
		(*AccountEvent_AccountApproved)(nil),
		(*AccountEvent_AccountApproveFailed)(nil),
		(*AccountEvent_AccountClosed)(nil),
		(*AccountEvent_AccountCloseFailed)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_account_events_account_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_account_events_account_proto_goTypes,
		DependencyIndexes: file_account_events_account_proto_depIdxs,
		MessageInfos:      file_account_events_account_proto_msgTypes,
	}.Build()
	File_account_events_account_proto = out.File
	file_account_events_account_proto_rawDesc = nil
	file_account_events_account_proto_goTypes = nil
	file_account_events_account_proto_depIdxs = nil
}
